{"version":3,"sources":["components/Header.js","actions/index.js","components/TodoItem.js","components/Todos.js","components/NewTodo.js","components/Body.js","App.js","reducers/todos.js","reducers/current.js","reducers/index.js","index.js"],"names":["Header","controlledInput","field","update","type","TodoItem","props","title","date","memo","id","dispatch","useDispatch","className","onClick","payload","remove","Todos","todos","useSelector","state","length","map","todo","NewTodo","current","handleChange","event","target","name","value","onChange","alert","Body","App","todoReducer","action","newPayload","Date","now","console","log","concat","filter","nontarget","newState","currentReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fce29eb.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Header = () => {\n\n    return (\n        <>\n            <h1>My To-do List</h1>\n        </>\n    )\n}\n\nexport default Header","export const add = (todo) => {\n    return{\n        type: \"ADD\",\n        payload: todo\n    }\n};\n\nexport const remove = (id) => {\n    return {\n        type: \"REMOVE\",\n        payload: id\n    }\n};\n\nexport const controlledInput = (field, update) => {\n    return {\n        type: \"CONTROL\",\n        field: field,\n        update: update\n    }\n}\n\nexport const update = (title, date, memo) => {\n    return {\n        type: \"UPDATE\",\n        title: title,\n        date: date,\n        memo: memo\n    }\n}\n\nexport const clear = () => {\n    return {\n        type: \"CLEAR\"\n    }\n\n}","import React from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { remove, controlledInput } from \"../actions\"\n\nconst TodoItem = (props) => {\n\n    const { title, date, memo, id } = props.props\n\n    const dispatch = useDispatch()\n\n    const handleDelete = () => {\n        dispatch(remove(id))\n    }\n\n    const handleUpdate = () => {\n        dispatch(controlledInput(\"title\", title))\n        dispatch(controlledInput(\"date\", date))\n        dispatch(controlledInput(\"memo\", memo))\n        dispatch(controlledInput(\"id\", id))\n    }\n\n    return (\n        <div id=\"todoitem\">\n            <h2 id=\"todotitle\">{title}</h2>\n            <h3 className=\"TodoDetails\">Do by: {date}</h3>\n            <h3 className=\"TodoDetails\">Notes:</h3>\n            <p>{memo}</p>\n            <button onClick={handleUpdate}>Update Todo</button>\n            <button onClick={handleDelete}>Delete Todo</button>\n        </div>\n    )\n}\n\nexport default TodoItem","import React from \"react\"\nimport TodoItem from \"./TodoItem\"\nimport { useSelector } from \"react-redux\"\n\nconst Todos = () => {\n\n    const todos = useSelector(state => (state.todos))\n\n    return (\n        <>\n            {todos.length === 0 ? <h1 id=\"notodos\">Let's make some to-do items!</h1> : todos.map(todo => {return <TodoItem key={todo.id} props={todo}/>})}\n        </>\n    )\n}\n\nexport default Todos","import React from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { add, clear, controlledInput } from \"../actions\"\n\n\nconst NewTodo = () => {\n\n    const dispatch = useDispatch()\n\n    const current = useSelector(state => (state.current))\n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        dispatch(controlledInput(name, value))\n    }\n\n    const handleSubmit = () => {\n        if (current.title === \"\" || current.date === \"\") {\n            alert(\"Make sure you have a title and due date!\");\n        } else {\n            dispatch(add(current))\n            dispatch(clear())\n        }\n\n    }\n\n    return (\n        <>\n            <h2 className=\"Header\">Add a new to-do:</h2>\n            <h4>I have to...</h4>\n            <input value={current.title} name=\"title\" onChange={handleChange} />\n            <h4>Gotta do it by...</h4>\n            <input value={current.date} name=\"date\" onChange={handleChange} />\n            <h4>Extra notes?</h4>\n            <input value={current.memo} name=\"memo\" onChange={handleChange} />\n            <br />\n            <button type=\"submit\" onClick={handleSubmit}>Submit</button>\n        </>\n    )\n}\n\nexport default NewTodo","import Todos from \"./Todos\"\nimport NewTodo from \"./NewTodo\"\n\nconst Body = () => {\n\n    return (\n        <div className=\"Body\">\n            <div id=\"newtodo\">\n                <NewTodo />\n            </div>\n            <div id=\"todos\">\n                <Todos />\n            </div>\n        </div>\n    )\n}\n\nexport default Body","import './App.css';\nimport Header from \"./components/Header\"\nimport Body from \"./components/Body\"\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n      </header>\n      <div>\n        <Body />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const todoReducer = (state = [\n    {\n        title: \"Buy catfood\",\n        date: \"5/30/2021\",\n        memo: \"Don't buy beef food!\",\n        id: 1\n    },\n    {\n        title: \"Return book to library\",\n        date: \"4/30/2021\",\n        memo: \"Overdue!!\",\n        id: 2\n    }\n], action) => {\n    switch (action.type) {\n        case \"ADD\":\n            switch (action.payload.id) {\n                case 0:\n                    const newPayload = {...action.payload, id: Date.now()}\n                    console.log(newPayload)\n                    return(state.concat(newPayload))\n                default:\n                    console.log(action.payload)\n                    let target = state.filter(todo => todo.id === action.payload.id)\n                    target = action.payload\n                    const nontarget = state.filter(todo => todo.id !== action.payload.id)\n                    return(nontarget.concat(target));\n            }\n        case \"REMOVE\":\n            const newState = state.filter(todo => todo.id !== action.payload)\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport default todoReducer","const currentReducer = (state = {\n        title: \"\",\n        date: \"\",\n        memo: \"\",\n        id: 0\n    }, action) => {\n    switch (action.type) {\n        case \"CONTROL\":\n            state = {\n                ...state,\n                [action.field]: action.update\n            }\n            return(state);\n        case \"UPDATE\":\n            return(state);\n        case \"CLEAR\":\n            state = {\n                title: \"\",\n                date: \"\",\n                memo: \"\",\n                id: 0\n            }\n            return(state); \n        default:\n            return state;\n    }\n}\n\nexport default currentReducer","import { combineReducers } from \"redux\"\nimport todoReducer from \"./todos\"\nimport currentReducer from \"./current\"\n\nconst rootReducer = combineReducers({\n    todos: todoReducer,\n    current: currentReducer\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers'\nimport { Provider } from 'react-redux'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}